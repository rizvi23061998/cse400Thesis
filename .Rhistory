feat$Name = NULL
test.forest <- randomForest(protection ~ ., feat,importance = True)
feat$protection
as.character( feat$protection)
as.numeric( feat$protection)
test.forest <- randomForest(protection ~ ., feat,importance = True)
test.forest <- randomForest(protection ~ ., feat,importance = TRUE)
test.forest
fpsf = readRDS("out/featurized_PSF")
ngpsf = readRDS("out/featurized_nGrams")
fngdip = readRDS("out/featurized_nGDip")
x = merge(fpsf,ngpsf,by="Name");
comb_data = merge(x,fngdip,by="Name")
colnames(comb_data);
test.forest <- randomForest(protection ~ ., comb_data,importance = TRUE)
history
history()
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
Naive_Bayes_Model
print(Naive_Bayes_Model)
print(Naive_Bayes_Model)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(x)
colnames(x)[1000]
colnames(x)[10000]
colnames(x)[10000:]
colnames(x)[12000:]
colnames(x)[12000]
colnames(x)[12000:-1]
colnames(x)[12000:Inf]
colnames(x)[12000:13000]
colnames(x)[13500:14000]
colnames(x)[13200]
colnames(x)[13300]
colnames(x)[0:-1]
colnames(x)[13370:13375]
colnames(x)[13370:13376]
colnames(fpsf)[9700]
colnames(fpsf)[9500]
colnames(fpsf)[9500:9600]
colnames(fpsf)[9600:9650]
colnames(ngpsf)[9600:9650]
colnames(ngpsf)[3500]
colnames(ngpsf)[3500:400]
colnames(ngpsf)[3500:4000]
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
pred<-predict(Naive_Bayes_Model,x)
preed
pred
table(pred,x$protection)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
Naive_Bayes_Model
Naive_Bayes_Model.forest
pred<-predict(Naive_Bayes_Model,x)
table(pred,x$protection)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
as.numeric(fngdip)
as.numeric(colnames(fngdip))
as.numeric(c(fngdip))
library(dplyr)
fngdip=fngdip %>% mutate_if(is.character, as.factor)
rf.forest = randomForest(protection~.,fngdip)
fngdip.summary()
summary(fngdip)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
model.forest
ngramVal
ngramVal = r(ngramVal,c(0,2,1))
ngramVal = row(ngramVal,c(0,2,1))
fScheme
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:52:51 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:53:22 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:53:55 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 14:54:25 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:56:56 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:57:25 2019 ------##
readRDS("out/ff_nGrams.rds")
readRDS("out/ff_nGrams.rds")[1,]
length()readRDS("out/ff_nGrams.rds")
length(readRDS("out/ff_nGrams.rds"))
rfmodel = readRDS("out/rfmodel_nGrams.rds")
rfmodel$importance[order(-rfmodel$importance[,3]),]
rfmodel$importance[order(-rfmodel$importance[,3]),][rfmodel$importance[,3] > 0]
imp = rfmodel$importance[order(-rfmodel$importance[,3]),][rfmodel$importance[,3] > 0]
which(imp[,3] >0)
imp = rfmodel$importance[order(-rfmodel$importance[,3]),]
which(imp[,3] >0)
rownames(which(imp[,3] >0))
colnames(which(imp[,3] >0))
rfmodel = readRDS("out/rfmodel_PSF.rds")
imp = rfmodel$importance[order(-rfmodel$importance[,3]),]
which(imp[,3] >0)
array(which(imp[,3] >0))
which(imp[,3] >0)
c(which(imp[,3] >0))
c(which(imp[,3] >0))[0]
c(which(imp[,3] >0))[1]
print(which(imp[,3] >0))
print(which(imp[,3] >0))[2]
(which(imp[,3] >0))[2]
(which(imp[,3] >0))[1]
row(which(imp[,3] >0))[1]
colnames(which(imp[,3] >0))[1]
row(which(imp[,3] >0))[1,]
(which(imp[,3] >0))[1,]
(which(imp[,3] >0))[1]
(which(imp[,3] >0))[1:4]
list(which(imp[,3] >0))[1:4]
list(which(imp[,3] >0)[1:4])
(which(imp[,3] >0,arr.ind = TRUE))[1:4]
(which(imp[,3] >0,arr.ind = FALSE))[1:4]
(which(imp[,3] >0))[1:4]
str(which(imp[,3] >0))[1:4]
as.character(which(imp[,3] >0))[1]
as.character(which(imp[,3] >0))[2]
imp[(which(imp[,3] >0))]
rownames(imp[(which(imp[,3] >0))])
(imp[(which(imp[,3] >0)),]
)
rownames(imp[(which(imp[,3] >0)),])
fl = readRDS("out/featurized_nGrams.rds")
fl = subset(fl,select = rownames(imp[(which(imp[,3] >0)),]))
fl = subset(fl,select = c(rownames(imp[(which(imp[,3] >0)),]))
)
fl = subset(fl,select = )
c(rownames(imp[(which(imp[,3] >0)),])
)
fer = c(rownames(imp[(which(imp[,3] >0)),]))
fl = subset(fl,select = fer)
fl = subset(fl,select = fer)
colnames(fl)
colnames(fl)%in%fer
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
model.forest
242/288
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
model.forest
summary(model.forest)
summary(model)
plot(model.forest)
predicted.response <- predict(model.forest, dresstest)
confusionMatrix(data=predicted.response,
reference=dresstest$protection)
library(e1071)
confusionMatrix(data=predicted.response,
reference=dresstest$protection)
library(caret)
install.packages("caret")
library(caret)
confusionMatrix(data=predicted.response,
reference=dresstest$protection)
ROCRpred <- prediction(predicted.response, dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
library(ROCR)
ROCRpred <- prediction(predicted.response, dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
predicted.response <- predict(model.forest, dresstest,type = 'response')
confusionMatrix(data=predicted.response, reference=dresstest$protection)
ROCRpred <- prediction(predicted.response, dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
ROCRpred <- prediction(predicted, dresstest$protection)
predicted <- predict(model.forest, dresstest,type = 'response')
ROCRpred <- prediction(predicted, dresstest$protection)
predictions=as.vector(predicted$votes[,2])
predicted <- predict(model.forest, dresstest)
require(pROC)
rf.roc <- roc(dresstest$protection,predicted$votes[,2])
predicted <- predict(model.forest, dresstest,type="prob")
ROCRpred <- prediction(predicted, dresstest$protection)
ROCRpred <- prediction(predicted[,0], dresstest$protection)
ROCRpred <- prediction(predicted[,2], dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
ROCRpred <- prediction(predicted[,1], dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
ROCRpred <- prediction(predicted[,3], dresstest$protection)
predicted[,2]
ROCRpred <- prediction(predicted[,2], dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.2))
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.2))
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(ROCRperf, colorize = TRUE)
plot(ROCRperf, colorize = TRUE)
ROCRpred <- prediction(predicted[,1], dresstest$protection)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE)
ROCRpred1 <- prediction(predicted[,1], dresstest$protection)
ROCRperf1 <- performance(ROCRpred1, 'tpr','fpr')
ROCRpred2 <- prediction(predicted[,2], dresstest$protection)
ROCRperf2 <- performance(ROCRpred2, 'tpr','fpr')
plot(ROCRperf1,ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
ROCRpred1 <- prediction(predicted[,1], dresstest$protection)
ROCRperf1 <- performance(ROCRpred1, 'tpr','fpr')
ROCRpred2 <- prediction(predicted[,2], dresstest$protection)
ROCRperf2 <- performance(ROCRpred2, 'tpr','fpr')
plot(ROCRperf1, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(ROCRperf2, col='red')
plot(ROCRperf1, col='green')
print(predicted)
print(predicted$votes)
print(predicted[votes])
print(predicted)
plot(ROCRperf2, col='red',ROCRperf1,col='green')
plot(ROCRperf1, col='green')
lines(ROCRperf2,col='red')
plot(ROCRperf1, col='green',add=TRUE)
plot(ROCRperf2,col='red')
plot(ROCRperf1, col='green',add=TRUE)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
ROCRpred2 <- prediction(predicted[,2], dresstest$protection)
ROCRperf2 <- performance(ROCRpred2, 'tpr','fpr')
plot(ROCRperf1, colorize = TRUE, text.adj = c(-0.2,1.7))
ROCRpred2 <- prediction(predicted[,2], dresstest$protection)
ROCRperf2 <- performance(ROCRpred2, 'tpr','fpr')
plot(ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
install.packages("PRROC")
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
length(features_important)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(predicted)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw_CV.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw_CV.R')
warnings()
type
type="out/"
rocCurveFile = paste0(type, "ROCCurve_CV.eps");
prCurveFile  = paste0(type, "PRCurve_CV.eps");
rocCurvePoints = readRDS(paste0(type, "rocData.rds"));
prCurvePoints  = readRDS(paste0(type, "prData.rds"));
rocPlot = ggplot(rocCurvePoints,aes(x, y)) +
theme_bw(base_size = 36, base_family = "") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
geom_line(aes(colour=Features),size = 2) +
labs(x = "False Positive Rate", y = "True Positive Rate");
postscript(file = rocCurveFile, paper = "letter");
print(rocPlot + scale_colour_grey(start = 0, end = 0.6))
dev.off();
prPlot = ggplot(prCurvePoints,aes(x, y)) +
theme_bw(base_size = 36, base_family = "") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.title = element_blank()) +
theme(legend.position = "top") +
geom_line(aes(colour=Features),size = 2) +
labs(x = "Recall", y = "Precision");
postscript(file = prCurveFile, paper = "letter");
print(prPlot + scale_colour_grey(start = 0, end = 0.6));
dev.off();
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
plot(ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(roc)
plot(ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(ROCRperf2, colorize = TRUE, text.adj = c(-0.2,1.7))
plot(roc)
roc <- roc.curve(scores.class0 = fg, scores.class1 = bg, curve = T)
roc <- roc.curve(scores.class0 = fg, scores.class1 = bg, curve = F)
plot(roc)
roc <- roc.curve(scores.class0 = fg, scores.class1 = bg, curve = T)
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(confusionMatrix(data=as.numeric(predict),reference = dresstest$protection,positive = "1"))
print(predict)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(confusionMatrix(data=predicted, reference=dresstest$protection,mode="prec_recall",positive = "1"))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
fg <- predicted[dresstest$protection == 1,2]
bg <- predicted[dresstest$protection == 0,2]
# bg <- probs[df$label == 0]
# ROC Curve
roc <- roc.curve(scores.class0 = fg, scores.class1 = bg, curve = T)
plot(roc)
pr <- pr.curve(scores.class0 = fg, scores.class1 = bg, curve = T)
plot(pr)
plot(roc)
plot(pr)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot9roc
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
View(predicted_prob)
print(mcc(data=(predict),reference = dresstest$protection))
installed.packages("mltools")
install.packages("mltools")
library(mltools)
print(mcc(data=(predict),reference = dresstest$protection))
print(mcc(predict,dresstest$protection))
plot(roc)
plot(pr)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(mcc(predict,dresstest$protection))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(mcc(predict,dresstest$protection))
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(confusionMatrix(data=(predict),reference = dresstest$protection,positive = "1"))
print(confusionMatrix(data=predicted, reference=dresstest$protection,positive = "1"))
predicted <- predict(model, dresstest)
print(confusionMatrix(data=predicted, reference=dresstest$protection,positive = "1"))
print(mcc(predicted,dresstest$protection))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(confusionMatrix(data=predicted, reference=dresstest$protection,mode="prec_recall",positive = "1"))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(confusionMatrix(data=predicted, reference=dresstest$protection,mode="prec_recall",positive = "1"))
predicted <- predict(model, dresstest)
print(confusionMatrix(data=predicted, reference=dresstest$protection,mode="prec_recall",positive = "1"))
print(confusionMatrix(data=predicted, reference=dresstest$protection,positive = "1"))
print(mcc(predicted,dresstest$protection))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
plot(roc)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
34/(34+14)
43/(43+46)
34/(46+34)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:49:13 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:49:41 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:50:20 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:50:40 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:51:43 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:55:05 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 19:57:57 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:04:53 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:05:18 2019 ------##
if (!file.exists(FinalRankedFeaturesFile | TRUE)) {
cat(as.character(Sys.time()),">> Loading feature file ...\n");
features = readRDS(featureFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", featureFile, ")\n");
features$ID = NULL;
features$Type = NULL;
cat(as.character(Sys.time()),">> Total features: ", length(features[1,]) - 1, "\n");
cat(as.character(Sys.time()),">> Loading initial feature ranking ...\n");
rankedFeatures = readRDS(InitialRankedFeaturesFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", InitialRankedFeaturesFile, ")\n");
# Reduce the feature vectors to the max size that we will be testing.
# This way the filtering cost in the loop below will be reduced.
features = featurefiltering(features, rankedFeatures, 3000);
#
# Balance the dataset (576+576) by undersampling the negative (larger) set
#
# positiveSet = features[sample(1:576),]
# negativeSetInd = sample(577:length(features[,1]))[1:576]
# negativeSetInd = negativeSetInd[order(negativeSetInd)]
# features = rbind(features[1:576,], features[negativeSetInd,])
#
# random shuffle of features
# features <- features[sample(nrow(features)),]
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
labelCol = which(colnames(features) == "protection");
rankedFeatures = svmRFE(features[,-labelCol], features$protection, 1);
saveRDS(rankedFeatures, FinalRankedFeaturesFile);
cat(as.character(Sys.time()),">> Done\n");
} else {
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
rankedFeatures = readRDS(FinalRankedFeaturesFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", FinalRankedFeaturesFile, ")\n");
}
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:06:05 2019 ------##
warnings()
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:08:29 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Mon Aug 26 20:11:58 2019 ------##
features_important <- c(readRDS("out/ff_nf_nGrams.rds"),readRDS("out/ff_nf_nGDip.rds"),readRDS("out/ff_nf_PSF.rds"));
features = features_important
svmRFE(features[,-which(colnames(features) == "protection")], features$protection, 1)
labelCol = which(colnames(features) == "protection");
svmRFE(features[,-labelCol], features$protection, 1)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:28:43 2019 ------##
warnings()
print(readRDS("out/comb_raw.rds"))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:34:24 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')fpsf = readRDS("out/featurized_PSF.rds");
ngpsf = readRDS("out/featurized_nGrams.rds");
fngdip = readRDS("out/featurized_nGDip.rds");
ngpsf$protection = NULL;
fngdip$protection = NULL;
x <- merge(fpsf,ngpsf,by="Name");
comb_data <- merge(x,fngdip,by="Name");
x$Name = NULL;
saveRDS(comb_data,"out/comb_raw.rds");
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:38:39 2019 ------##
features_important = comb_data
features_important <- c(features_important,"Name","protection");
comb_data = features_important
saveRDS(comb_data,"out/comb_raw.rds");
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:40:32 2019 ------##
features_important <- c(readRDS("out/ff_nGrams.rds"),readRDS("out/ff_nGDip.rds"),readRDS("out/ff_PSF.rds"));
features_important <- c(features_important,"Name","protection");
fpsf = readRDS("out/featurized_PSF.rds");
ngpsf = readRDS("out/featurized_nGrams.rds");
fngdip = readRDS("out/featurized_nGDip.rds");
ngpsf$protection = NULL;
fngdip$protection = NULL;
x <- merge(fpsf,ngpsf,by="Name");
comb_data <- merge(x,fngdip,by="Name");
comb_data <- subset(comb_data, select = c(features_important))
saveRDS(comb_data,"out/comb_raw.rds");
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:41:42 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 20:42:13 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures_SVMRFE.R')
##------ Mon Aug 26 21:26:19 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
