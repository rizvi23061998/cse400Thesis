install.packages("mRMRe")
install.packages(c("e1071", "randomForest", "ROCR"))
install.packages("readxl")
dataFolder = "Sequences/"
seqFile = paste(dataFolder,"pnas_sd02",sep="");
infoFile = paste(dataFolder,"pnas_sd01",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
dataFolder = "Sequences/"
seqFile = paste(dataFolder,"pnas_sd02",sep="");
infoFile = paste(dataFolder,"pnas_sd01",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
library(readxl)
dataFolder = "Sequences/"
seqFile = paste(dataFolder,"pnas_sd02",sep="");
infoFile = paste(dataFolder,"pnas_sd01",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
dataFolder = "Sequences/"
seqFile = paste(dataFolder,"pnas_sd02",sep="");
infoFile = paste(dataFolder,"pnas_sd01",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
seqFile = paste(dataFolder,"pnas_sd02.xlxs",sep="");
infoFile = paste(dataFolder,"pnas_sd01.xlxs",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
seqFile = paste(dataFolder,"pnas_sd02.xlsx",sep="");
infoFile = paste(dataFolder,"pnas_sd01.xlsx",sep="");
info = read_excel(infoFile);
seq = read_excel(seqFile);
ifno
print(info)
merge(info,seq,by="Name")
x = merge(info,seq,by="Name")
colnames(x)
x = subset(x,select = c(Name,Clinical Status,VH,VL))
x = subset(x,select = c("Name","Clinical Status","VH","VL"))
print(X)
print(x)
print(colnames(x))
library(tidyverse)
install.packages('tidyverse')
dataset$Seq = paste(dataset$VH,dataset$VL);
dataset$Seq = paste(dataset$VH,dataset$VL);
dataset = x;
dataset$Seq = paste(dataset$VH,dataset$VL,sep="");
dataset
print(colnames(dataset))
dataset$protection[dataset$]
names(dataset)[names(dataset) == "Clinical Status"]<-"protection"
print(colnames(dataset))
dataset$protection[dataset$protection == "Approved"]<- "1"
print((dataset$protection))
dataset$protection[dataset$protection != "Approved"]<- "1"
dataset$protection[dataset$protection != "Approved"]<- "0"
print((dataset$protection))
dataset = x;
dataset$Seq = paste(dataset$VH,dataset$VL,sep="");
names(dataset)[names(dataset) == "Clinical Status"]<-"protection"
dataset$Seq = paste(dataset$VH,dataset$VL,sep="");
dataset$protection[dataset$protection == "Approved"]<- "1"
dataset$protection[dataset$protection != "1"]<- "0"
print(dataset$protection)
print(colnames(dataset))
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
library(here)
install.packages(here)
install.packages('here')
library(here)
here()
here("featurization")
here
here()
source(./featutizaion.R)
source('./featurization.R');
here("featurization")
source('./featurization.R');
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Fri Aug 02 23:51:19 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Fri Aug 02 23:52:05 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Fri Aug 02 23:57:24 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Fri Aug 02 23:58:03 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 00:04:05 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 00:04:29 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 00:06:20 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 00:06:36 2019 ------##
test.forest <- randomForest(protection ~ Sequence, )
feat = readRDS("out/featurized_PSF")
test.forest <- randomForest(protection ~ Sequence, feat,importance = True)
test.forest <- randomForest(protection ~ ., feat,importance = True)
test.forest <- randomForest(protection ~ ., feat,importance = TRUE)
colnames(feat)
colnames(feat)[9000]
colnames(feat)[9000:]
colnames(feat)[9877]
colnames(feat)[9800]
colnames(feat)[9700]
colnames(feat)[9500]
colnames(feat)[9600]
colnames(feat)[9670]
colnames(feat)[9650]
colnames(feat)[9630]
colnames(feat)[9620]
colnames(feat)[9625]
colnames(feat)[9620]
colnames(feat)[9620:.]
colnames(feat)[9620:9630]
test.forest <- randomForest(protection ~ ., feat,importance = True)
feat$Name = NULL
test.forest <- randomForest(protection ~ ., feat,importance = True)
feat$protection
as.character( feat$protection)
as.numeric( feat$protection)
test.forest <- randomForest(protection ~ ., feat,importance = True)
test.forest <- randomForest(protection ~ ., feat,importance = TRUE)
test.forest
fpsf = readRDS("out/featurized_PSF")
ngpsf = readRDS("out/featurized_nGrams")
fngdip = readRDS("out/featurized_nGDip")
x = merge(fpsf,ngpsf,by="Name");
comb_data = merge(x,fngdip,by="Name")
colnames(comb_data);
test.forest <- randomForest(protection ~ ., comb_data,importance = TRUE)
history
history()
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
Naive_Bayes_Model
print(Naive_Bayes_Model)
print(Naive_Bayes_Model)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
print(x)
colnames(x)[1000]
colnames(x)[10000]
colnames(x)[10000:]
colnames(x)[12000:]
colnames(x)[12000]
colnames(x)[12000:-1]
colnames(x)[12000:Inf]
colnames(x)[12000:13000]
colnames(x)[13500:14000]
colnames(x)[13200]
colnames(x)[13300]
colnames(x)[0:-1]
colnames(x)[13370:13375]
colnames(x)[13370:13376]
colnames(fpsf)[9700]
colnames(fpsf)[9500]
colnames(fpsf)[9500:9600]
colnames(fpsf)[9600:9650]
colnames(ngpsf)[9600:9650]
colnames(ngpsf)[3500]
colnames(ngpsf)[3500:400]
colnames(ngpsf)[3500:4000]
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
pred<-predict(Naive_Bayes_Model,x)
preed
pred
table(pred,x$protection)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
Naive_Bayes_Model
Naive_Bayes_Model.forest
pred<-predict(Naive_Bayes_Model,x)
table(pred,x$protection)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
as.numeric(fngdip)
as.numeric(colnames(fngdip))
as.numeric(c(fngdip))
library(dplyr)
fngdip=fngdip %>% mutate_if(is.character, as.factor)
rf.forest = randomForest(protection~.,fngdip)
fngdip.summary()
summary(fngdip)
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/combineRaw.R')
model.forest
ngramVal
ngramVal = r(ngramVal,c(0,2,1))
ngramVal = row(ngramVal,c(0,2,1))
fScheme
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:52:51 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:53:22 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:53:55 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/featurization/featurizeAll.R')
##------ Sat Aug 03 14:54:25 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:56:56 2019 ------##
source('F:/Ebooks&Lectures/Level-4_Term-1/cse_400/Antigenic-master/Code/R/Magnan/ranking and filtering/rankFeatures.R')
##------ Sat Aug 03 14:57:25 2019 ------##
readRDS("out/ff_nGrams.rds")
readRDS("out/ff_nGrams.rds")[1,]
length()readRDS("out/ff_nGrams.rds")
length(readRDS("out/ff_nGrams.rds"))
rfmodel = readRDS("out/rfmodel_nGrams.rds")
rfmodel$importance[order(-rfmodel$importance[,3]),]
rfmodel$importance[order(-rfmodel$importance[,3]),][rfmodel$importance[,3] > 0]
imp = rfmodel$importance[order(-rfmodel$importance[,3]),][rfmodel$importance[,3] > 0]
which(imp[,3] >0)
imp = rfmodel$importance[order(-rfmodel$importance[,3]),]
which(imp[,3] >0)
rownames(which(imp[,3] >0))
colnames(which(imp[,3] >0))
rfmodel = readRDS("out/rfmodel_PSF.rds")
imp = rfmodel$importance[order(-rfmodel$importance[,3]),]
which(imp[,3] >0)
array(which(imp[,3] >0))
which(imp[,3] >0)
c(which(imp[,3] >0))
c(which(imp[,3] >0))[0]
c(which(imp[,3] >0))[1]
print(which(imp[,3] >0))
print(which(imp[,3] >0))[2]
(which(imp[,3] >0))[2]
(which(imp[,3] >0))[1]
row(which(imp[,3] >0))[1]
colnames(which(imp[,3] >0))[1]
row(which(imp[,3] >0))[1,]
(which(imp[,3] >0))[1,]
(which(imp[,3] >0))[1]
(which(imp[,3] >0))[1:4]
list(which(imp[,3] >0))[1:4]
list(which(imp[,3] >0)[1:4])
(which(imp[,3] >0,arr.ind = TRUE))[1:4]
(which(imp[,3] >0,arr.ind = FALSE))[1:4]
(which(imp[,3] >0))[1:4]
str(which(imp[,3] >0))[1:4]
as.character(which(imp[,3] >0))[1]
as.character(which(imp[,3] >0))[2]
imp[(which(imp[,3] >0))]
rownames(imp[(which(imp[,3] >0))])
(imp[(which(imp[,3] >0)),]
)
rownames(imp[(which(imp[,3] >0)),])
fl = readRDS("out/featurized_nGrams.rds")
fl = subset(fl,select = rownames(imp[(which(imp[,3] >0)),]))
fl = subset(fl,select = c(rownames(imp[(which(imp[,3] >0)),]))
)
fl = subset(fl,select = )
c(rownames(imp[(which(imp[,3] >0)),])
)
fer = c(rownames(imp[(which(imp[,3] >0)),]))
fl = subset(fl,select = fer)
fl = subset(fl,select = fer)
colnames(fl)
colnames(fl)%in%fer
